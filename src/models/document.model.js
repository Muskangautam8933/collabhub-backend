import mongoose from "mongoose";

const DocumentSchema = new mongoose.Schema({
  // Title or name of the document
  title: {
    type: String,
    required: [true, 'Document title is required'],
    trim: true,
    maxlength: [150, 'Title too long (max 150 characters)']
  },

  // Optional description or summary
  description: {
    type: String,
    trim: true,
    maxlength: [500, 'Description too long']
  },

  // Main content: markdown / HTML / plain text / JSON (optional)
  content: {
    type: String,
    default: ''
  },

  // Optional URL for uploaded/generated file (PPT, PDF, etc.)
  fileUrl: {
    type: String,
    trim: true
  },

  // Type of document (for display/handling)
  docType: {
    type: String,
    enum: ['ppt', 'pdf', 'markdown', 'text', 'ai_generated'],
    default: 'text'
  },

  // Team the document belongs to
  team: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Team',
    required: true
  },

  // User who created/uploaded the document
  createdBy: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  },

  // Whether this document is generated by AI
  isGeneratedByAI: {
    type: Boolean,
    default: false
  },

  // Array of users who have edited the document
  collaborators: [{
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User'
  }],

  // Tags or labels for categorization
  tags: [{
    type: String,
    trim: true
  }],

  // Visibility control (public to team or private)
  visibility: {
    type: String,
    enum: ['team', 'private'],
    default: 'team'
  }

}, {
  timestamps: true // Adds createdAt and updatedAt
});

// Optional: Full text search index
DocumentSchema.index({ title: 'text', description: 'text', content: 'text' });

export default mongoose.model('Document', DocumentSchema);
